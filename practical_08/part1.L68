00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 25/01/2023 16:59:35

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : part1.X68 Pract 8
00000000                             3  * Written by : Ahmad Muselmani
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000  43F9 0000102C             10      LEA Message, A1    ; load the content of the text into Address regester A1
00001006  303C 000E                 11      MOVE #14,D0     ; #14 that converted to hex and updated into D0 is intreuction to display the string that in A1  
0000100A  4E4F                      12      TRAP #15        ; trap instructor output the Message text 
0000100C                            13    
0000100C  303C 0004                 14      MOVE #4,D0      ; move 8 bit litteral number 9 into D0
00001010  4E4F                      15      TRAP #15        ;read a number from keyboard and store it into data register D1
00001012  11C1 0500                 16      MOVE.b D1,$500 ; Store Gamer points in memory locatin 500
00001016                            17     
00001016  43F9 00001040             18      LEA points , A1    ; load the content of the text into Address regester A1
0000101C  303C 000E                 19      MOVE #14,D0     ; #14 that converted to hex and updated into D0 is intreuction to display the string that in A1  
00001020  4E4F                      20      TRAP #15        ;trap instructor output the points text
00001022                            21     
00001022  303C 0003                 22      MOVE #3,D0      ; display the signed number of D1  
00001026  4E4F                      23      TRAP #15        ;instruct to place output the number outputed beside the points  text 
00001028                            24  
00001028                            25  
00001028                            26  * Put program code here
00001028                            27  
00001028  FFFF FFFF                 28      SIMHALT             ; halt simulator
0000102C                            29      
0000102C= 45 6E 74 65 72 20 ...     30  Message dc.b 'Enter your points: ',0
00001040= 79 6F 75 72 20 70 ...     31  points dc.b 'your points is: ',0
00001051                            32  
00001051                            33  * Put variables and constants here
00001051                            34  
00001051                            35      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
MESSAGE             102C
POINTS              1040
START               1000
